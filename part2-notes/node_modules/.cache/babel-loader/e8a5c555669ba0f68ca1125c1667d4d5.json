{"ast":null,"code":"var _jsxFileName = \"/home/xubuntu/Documents/FullStackOpen/part2-notes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Note from './components/Note';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState(props.notes);\n  const [newNote, setNewNote] = useState('a new note...');\n  const [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    console.log('effect');\n    axios.get('http://localhost:3001/notes').then(response => {\n      console.log('promise fulfilled');\n      setNotes(response.data);\n    });\n  }, []);\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1\n    };\n    setNotes(notes.concat(noteObject));\n    setNewNote('');\n  };\n\n  const handleNoteChange = event => {\n    //console.log(event.target.value)\n    setNewNote(event.target.value);\n    console.log(notes);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"show \", showAll ? 'important' : 'all']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        note: note\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"a7+jLNlpagXaveo1HLLjF401/u0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/xubuntu/Documents/FullStackOpen/part2-notes/src/App.js"],"names":["Note","useState","useEffect","axios","App","notes","setNotes","props","newNote","setNewNote","showAll","setShowAll","console","log","get","then","response","data","addNote","event","preventDefault","noteObject","content","date","Date","toISOString","important","Math","random","id","length","concat","handleNoteChange","target","value","notesToShow","filter","note","map"],"mappings":";;;AACA,OAAOA,IAAP,MAAiB,mBAAjB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAqBL,QAAQ,CAACM,KAAK,CAACF,KAAP,CAAlC;AACA,QAAK,CAACG,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,eAAD,CAArC;AACA,QAAK,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAV,IAAAA,KAAK,CACJW,GADD,CACK,6BADL,EAECC,IAFD,CAEMC,QAAQ,IAAG;AACfJ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAP,MAAAA,QAAQ,CAACU,QAAQ,CAACC,IAAV,CAAR;AACD,KALD;AAMD,GARQ,EAQP,EARO,CAAT;;AAaA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,UAAU,GAAG;AACjBC,MAAAA,OAAO,EAAEd,OADQ;AAEjBe,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAFW;AAGjBC,MAAAA,SAAS,EAAEC,IAAI,CAACC,MAAL,KAAe,GAHT;AAIjBC,MAAAA,EAAE,EAAExB,KAAK,CAACyB,MAAN,GAAe;AAJF,KAAnB;AAMAxB,IAAAA,QAAQ,CAACD,KAAK,CAAC0B,MAAN,CAAaV,UAAb,CAAD,CAAR;AACAZ,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAVD;;AAYA,QAAMuB,gBAAgB,GAAIb,KAAD,IAAW;AAClC;AACAV,IAAAA,UAAU,CAACU,KAAK,CAACc,MAAN,CAAaC,KAAd,CAAV;AACAtB,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACD,GAJD;;AAKA,QAAM8B,WAAW,GAAGzB,OAAO,GACzBL,KADyB,GAClBA,KAAK,CAAC+B,MAAN,CAAaC,IAAI,IAAEA,IAAI,CAACX,SAAL,KAAmB,IAAtC,CADT;AAGA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAE,MAAMf,UAAU,CAAC,CAACD,OAAF,CAAjC;AAAA,4BACQA,OAAO,GAAG,WAAH,GAAiB,KADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAA,gBACGyB,WAAW,CAACG,GAAZ,CAAgBD,IAAI,iBACnB,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAEA;AAA1B,SAAWA,IAAI,CAACR,EAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAPF,eAYE;AAAM,MAAA,QAAQ,EAAEX,OAAhB;AAAA,8BACE;AACA,QAAA,KAAK,EAAIV,OADT;AAEA,QAAA,QAAQ,EAAIwB;AAFZ;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA5DD;;GAAM5B,G;;KAAAA,G;AA8DN,eAAeA,GAAf","sourcesContent":["\nimport Note from './components/Note'\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n\nconst App = () => {\n  \n  const[notes, setNotes] =  useState(props.notes)\n  const[newNote, setNewNote] = useState('a new note...')\n  const[showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    console.log('effect')\n    axios\n    .get('http://localhost:3001/notes')\n    .then(response=> {\n      console.log('promise fulfilled')\n      setNotes(response.data)\n    })\n  },[])\n  \n  \n  \n  \n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() <0.5,\n      id: notes.length + 1,\n    }\n    setNotes(notes.concat(noteObject))\n    setNewNote('')\n  }\n\n  const handleNoteChange = (event) => {\n    //console.log(event.target.value)\n    setNewNote(event.target.value)\n    console.log(notes)\n  }\n  const notesToShow = showAll\n  ? notes: notes.filter(note=>note.important === true)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>        \n        <button onClick={() => setShowAll(!showAll)}>          \n          show {showAll ? 'important' : 'all' }        \n        </button>      \n      </div>\n      <ul>\n        {notesToShow.map(note => \n          <Note key={note.id} note={note} />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input \n        value = {newNote} \n        onChange = {handleNoteChange}/>\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}