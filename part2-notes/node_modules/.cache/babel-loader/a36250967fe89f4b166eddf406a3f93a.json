{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport Note from './components/Note';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState(props.notes);\n  const [newNote, setNewNote] = useState('a new note...');\n  const [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    console.log('effect');\n    axios.get('http://localhost:3001/notes').then(response => {\n      console.log('promise fulfilled');\n      setNotes(response.data);\n    });\n  }, []);\n};\n\n_s(App, \"a7+jLNlpagXaveo1HLLjF401/u0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/xubuntu/Documents/FullStackOpen/part2-notes/src/App.js"],"names":["Note","useState","useEffect","axios","App","notes","setNotes","props","newNote","setNewNote","showAll","setShowAll","console","log","get","then","response","data"],"mappings":";;AACA,OAAOA,IAAP,MAAiB,mBAAjB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAqBL,QAAQ,CAACM,KAAK,CAACF,KAAP,CAAlC;AACA,QAAK,CAACG,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,eAAD,CAArC;AACA,QAAK,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAV,IAAAA,KAAK,CACJW,GADD,CACK,6BADL,EAECC,IAFD,CAEMC,QAAQ,IAAG;AACfJ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAP,MAAAA,QAAQ,CAACU,QAAQ,CAACC,IAAV,CAAR;AACD,KALD;AAMD,GARQ,EAQP,EARO,CAAT;AAcD,CApBD;;GAAMb,G;;KAAAA,G;AAsBN,eAAeA,GAAf","sourcesContent":["\nimport Note from './components/Note'\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n\nconst App = () => {\n  \n  const[notes, setNotes] =  useState(props.notes)\n  const[newNote, setNewNote] = useState('a new note...')\n  const[showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    console.log('effect')\n    axios\n    .get('http://localhost:3001/notes')\n    .then(response=> {\n      console.log('promise fulfilled')\n      setNotes(response.data)\n    })\n  },[])\n  \n  \n  \n  \n  \n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}